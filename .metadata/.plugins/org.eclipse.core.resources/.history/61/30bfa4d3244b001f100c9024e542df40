<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.busking.mypage.model.UserJoinMapper">
	<!-- 회원가입 -->
    <insert id="signup" parameterType="com.busking.mypage.model.UserJoinDTO">
        INSERT INTO USERS (USER_ID, USER_PW, USER_NAME, USER_EMAIL, USER_PNO, USER_ADDR, USER_GENDER)
        VALUES (#{userId}, #{userPw}, #{userName}, #{userEmail}, #{userPno}, #{userAddr, jdbcType=CLOB}, #{userGender})
    </insert>
    <!-- 회원가입-중복확인 -->
    <select id="checkUserId" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM USERS WHERE USER_ID = #{userId}
    </select>
    <!-- 로그인 -->
    <select id="login" parameterType="map" resultType="com.busking.mypage.model.UserJoinDTO">
        SELECT USER_ID, USER_PW, USER_NAME, USER_EMAIL, USER_PNO, USER_ADDR
        FROM USERS
        WHERE USER_ID = #{userId} AND USER_PW = #{userPw}
    </select>

    <select id="findUserId" parameterType="com.busking.mypage.model.UserJoinDTO" resultType="string">
        SELECT USER_ID FROM USERS WHERE USER_EMAIL = #{userEmail} AND USER_PNO = #{userPno}
    </select>

    <!-- 사용자 비밀번호 찾기 쿼리 -->
    <select id="findUserPw" parameterType="com.busking.mypage.model.UserJoinDTO" resultType="string">
        SELECT USER_PW FROM USERS WHERE USER_ID = #{userId} AND USER_PNO = #{userPno}
    </select>
    
    <!-- 사용자 정보 조회 -->
    <select id="getUserInfo" parameterType="String" resultType="com.busking.mypage.model.UserJoinDTO">
        SELECT USER_ID, USER_PW, USER_NAME, USER_EMAIL, USER_PNO, USER_ADDR, USER_GENDER
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>

    <!-- 사용자 정보 업데이트 -->
    <update id="updateUserInfo" parameterType="com.busking.mypage.model.UserJoinDTO">
        UPDATE USERS
        SET USER_PW = #{userPw},
            USER_NAME = #{userName},
            USER_EMAIL = #{userEmail},
            USER_PNO = #{userPno},
            USER_ADDR = #{userAddr, jdbcType=CLOB},
            USER_GENDER = #{userGender}
        WHERE USER_ID = #{userId}
    </update>
    <!-- 사용자 정보 삭제 -->
    <delete id="deleteUser" parameterType="String">
        DELETE FROM USERS WHERE USER_ID = #{userId}
    </delete>
</mapper>